#!/bin/bash

prog=$(basename $0)
author="techgaun"
desc="Brutally simple password manager for bash"
version="0.0.1"
red='\033[0;31m'
green='\033[0;32m'
nc='\033[0m'

password_file="${HOME}/.saancho.gpg"

error() {
    msg="${1:-$default_err}"
    echo -e "${red}${msg}${nc}"
    exit 1
}

msg() {
    msg="${1:-nothing}"
    echo -e "${green}${msg}${nc}"
}

is_debian() {
    [[ -f "/usr/bin/apt-get" ]]
}

is_rhel() {
    [[ -f "/usr/bin/yum" ]]
}

is_arch() {
    [[ -f "/usr/bin/pacman" ]]
}

saancho_create() {
  title=""
  read -p "Enter the identifier for your user: " title
}

saancho_read() {
  search=""
  read -p "Enter the search term(username or identifier): " search
}

saancho_delete() {
  identifier=""
  read -p "Enter the identifier to delete: " identifier
}

saancho_backup() {
  msg "Performing backup of ${password_file}"
}

cmd=$(command -v gpg2 || command -v gpg)

if [[ "$?" -ne "0" ]]; then
  echo "Could not find gpg binary. Trying to install gpg..."
  if is_debian; then
    sudo apt install -y gnupg2
    if [[ "$?" -ne "0" ]]; then
      sudo apt install -y gnupg
    fi
  elif is_rhel; then
    sudo yum install -y gnupg2
    if [[ "$?" -ne "0" ]]; then
      sudo yum install -y gnupg
    fi
  elif is_arch; then
      sudo pacman -S gnupg
  else
    error "Unknown distribution. Please install gnupg2/gnupg for your distribution and use ${prog}."
  fi
fi

if [[ ! -e "${password_file}" ]]; then
  msg "Saancho store does not exist. Creating..."
  password=""
  while [[ "x" == "x${password}" ]]; do
    read -s -p "Enter new passphrase to create your saancho store: " password
    echo ""
  done
  echo $password | ${cmd} --yes --symmetric --passphrase-fd 0 --batch --output $password_file || rm -f $password_file
  msg "Initialized saancho. Saancho store saved in ${password_file}"
fi

passphrase=""
read -s -p "Enter the passphrase for your saancho store: " passphrase

if [[ "x" == "x${passphrase}" ]]; then
  error "Invalid passphrase specified. Exiting!"
fi

choice=""
while [[ "${choice}" != "e" ]]; do
  echo -e "\n\nOptions available\n"
  echo -e "\tc - create new credential"
  echo -e "\tr - read existing credential"
  echo -e "\td - delete credential"
  echo -e "\tb - backup credential"
  echo -e "\te - exit Saancho\n"

  read -p "Enter the action you wish to perform: " choice
  echo ""
  case "${choice}" in
    c|C) saancho_create;;
    r|R) saancho_read;;
    d|D) saancho_delete;;
    b|B) saancho_backup;;
    *) choice="e";;
  esac
done

msg "\nExiting saancho!!!"
